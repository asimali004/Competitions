# -*- coding: utf-8 -*-
"""HackerEarthCompetition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fPb9xSDFkUFMJnxZ90w5JGDtlF9TS7-1
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("/content/train.csv")

df.head(2)

df.info()

df.dropna(inplace=True)

df.head(2)

df1 = df.iloc[:,[1,5,7,8,10,11]]
df1

for a in df1.columns:
  print(a,len(df1[a].unique()))

from sklearn.preprocessing import OneHotEncoder

ohe = OneHotEncoder()
df1 = ohe.fit_transform(df1)

df1=pd.DataFrame(df1.toarray())

df2 = df.iloc[:,[2,3,4,6,9,12,13]]
df2.head()

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()

df2 = sc.fit_transform(df2)

df2 = pd.DataFrame(df2)

final = pd.concat([df2,df1],axis=1)

final

y = df.iloc[:,14]

x = final
x

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(x_train,y_train)

y_pred = lr.predict(x_test)

from sklearn.metrics import mean_absolute_error

mean_absolute_error(y_test,y_pred)

from sklearn.tree import DecisionTreeRegressor

dtr = DecisionTreeRegressor()

dtr.fit(x_train,y_train)

y_pred2 = dtr.predict(x_test)

mean_absolute_error(y_test,y_pred2)

from sklearn.ensemble import RandomForestRegressor

rfr = RandomForestRegressor()

rfr.fit(x_train,y_train)

y_pred3 = rfr.predict(x_test)

mean_absolute_error(y_test,y_pred3)

from sklearn.svm import SVR

svr = SVR()

svr.fit(x_train,y_train)

y_pred4 = svr.predict(x_test)

mean_absolute_error(y_test,y_pred4)

df_test = pd.read_csv("/content/test.csv")

df_test.fillna(method="ffill",axis=0,inplace=True)

df.head(2)

df1.head(2)

df2.head(2)

dft1 = df_test.iloc[:,[1,5,7,8,10,11]]
dft1

for a in dft1.columns:
  print(a,len(dft1[a].unique()))

from sklearn.preprocessing import OneHotEncoder

ohe = OneHotEncoder()
dft1 = ohe.fit_transform(dft1)

dft1=pd.DataFrame(dft1.toarray())

dft2 = df_test.iloc[:,[2,3,4,6,9,12,13]]
dft2.head()

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()

dft2 = sc.fit_transform(dft2)

dft2 = pd.DataFrame(dft2)

final2 = pd.concat([dft2,dft1],axis=1)

dft1.head(2)

dft2.head(2)

final2

p1 = lr.predict(final2)
p2 = dtr.predict(final2)
p3 = rfr.predict(final2)
p4 = svr.predict(final2)

mean_absolute_error(p1,p2)

mean_absolute_error(p2,p3)

mean_absolute_error(p3,p4)

mean_absolute_error(p4,p2)

p3

df_test.head()

id = df_test.iloc[:,0]

pd.read_csv("/content/sample_submission.csv")

submission = pd.DataFrame({"Property_ID":id,"Habitability_score":p3})

submission

submission.to_csv("Submission.csv",index=False)

pd.read_csv("Submission.csv")

